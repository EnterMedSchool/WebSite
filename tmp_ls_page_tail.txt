                <div className="absolute inset-0 grid place-items-center bg-white/80 backdrop-blur-sm">
                  <div className="rounded-xl border bg-white p-4 text-center shadow ring-1 ring-black/5">
                    <div className="text-sm font-semibold text-gray-900">Locked</div>
                    <div className="text-xs text-gray-600">{player?.lockReason || 'Login and enroll to watch this video.'}</div>
                  </div>
                </div>
              )}
              {((() => { const p = player?.iframeSrc; if (p) return p; const g = guest?.player?.iframeSrc; if (g) return g; const h = guest?.html || ""; const m = h.match(/<iframe[^>]*src=\"([^\"]+)\"/i); if (m?.[1]) return m[1]; const y = h.match(/https?:\\/\\/(?:www\\.)?(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([A-Za-z0-9_-]+)/i); if (y?.[1]) return `https://www.youtube-nocookie.com/embed/${y[1]}`; return ""; })()) && (
                <div className="absolute bottom-3 left-3 right-3 text-white">
                  <div className="text-xs opacity-90">{course.title}</div>
                  <div className="text-lg font-semibold">{lessonTitle}</div>
                </div>
              )}
            </div>
          </div>

          {/* Learn tab — render lesson HTML body */}
          {tab === "learn" && (
            <div className="rounded-2xl border bg-white p-6 text-sm shadow-sm ring-1 ring-black/5">
              <LessonBody slug={slug} html={guest?.html} />
            </div>
          )}

          {/* Practice tab — shows bundled questions when available */}
          {tab === "practice" && (
            <div className="rounded-2xl border bg-white p-6 text-sm shadow-sm ring-1 ring-black/5">
              <div className="mb-2 text-sm font-semibold text-indigo-900">Practice</div>
              {!bundle && !bundleErr && <p className="text-gray-700">Loading questions…</p>}
              {bundleErr === 'unauthenticated' && !guest && (
                <p className="text-gray-700">Log in to see and practice questions.</p>
              )}
              {bundleErr === 'forbidden' && (
                <p className="text-gray-700">This course is paid. Your account doesn’t have access.</p>
              )}
              {!!relevantQuestions.length && (
                <ul className="mt-2 space-y-2">
                  {relevantQuestions.map((q) => (
